.Department {
	.content {
		h1 {
			font-size: 2rem;
			border-bottom: 1px solid #555;
			padding-bottom: 1.5rem;
		}
		.topContainer {
			width: 100%;
			height: 60vh;
			display: flex;
			justify-content: center;

			.txtBox {
				width: 30vw;
				height: 20vh;
			}

			.inContainer {
				width: 100%;
				display: flex;
				justify-content: space-between;
				padding: 5rem;

				.infoBox {
					width: 20%;
					height: 50vh;
				}
				.imgBox {
					width: 75%;
					height: 40vh;
					justify-content: space-between;
					flex-wrap: wrap;

					img {
						width: 100%;
						height: 100%;
					}
				}
			}
		}
		.container {
			width: 100%;
			display: flex;
			justify-content: space-between;

			.infoBox {
				width: 20%;
				height: 50vh;
			}
			.memberBox {
				width: 75%;
				display: flex;
				justify-content: space-between;
				flex-wrap: wrap; //줄바꿈처리
				border-bottom: 1px solid #555;
				padding-bottom: 1rem;

				article {
					width: 32%;
					margin-bottom: 35px;

					.pic {
						width: 100%;
						height: 40vh;
						position: relative;

						img {
							width: 100%;
							height: 100%;
							object-fit: cover;
							position: absolute;
							top: 0;

							&:nth-of-type(1) {
								filter: blur(20px) saturate(1.3);
								opacity: 0;
							}
							&:nth-of-type(2) {
								filter: saturate(0);
							}
						}
						&:hover {
							img:nth-of-type(1) {
								opacity: 0.5;
								transform: translateY(5%);
								transform: scale(1.05);
							}

							img:nth-of-type(2) {
								filter: saturate(1);
								transform: scale(1.05);
							}
						}
					}
					h2 {
						padding: 0.8rem 0rem;
					}
					p {
						padding: 0.3rem 0rem;
						color: #888;
					}
				}
			}
		}
		.lastTit {
			font-size: 2rem;
			padding-top: 10rem;
		}
	}
}
/*
	flex로 UI좌우 배치하는 방법
	1. 좌우배치할 덩어리를 부모태그로 wrapping
	2. 부모요소에 display: flex; justify:content적용
	3. 이때 사이간격을 주고 싶다면 총 너비의 합이 100% 안되게 설정
	4. 자식요소로 세로로 줄바꿈 되야 된다면 부모요소에 flex-wrap: wrap설정
*/
